--- ipsec-tools-0.2.2.orig/src/racoon/pfkey.c	2003-03-03 15:56:57.000000000 -0800
+++ ipsec-tools-0.2.2/src/racoon/pfkey.c	2003-10-30 10:19:03.374551671 -0800
@@ -767,6 +767,9 @@
 	u_int satype, mode;
 	struct saprop *pp;
 	struct saproto *pr;
+#ifdef __linux__
+	u_int32_t minspi, maxspi;
+#endif
 
 	pp = iph2->side == INITIATOR
 			? iph2->proposal
@@ -781,6 +784,18 @@
 				"invalid proto_id %d\n", pr->proto_id);
 			return -1;
 		}
+#ifdef __linux__
+		/* this works around a bug in Linux kernel where it allocates 4 byte
+		   spi's for IPCOMP */
+		else if (satype == SADB_X_SATYPE_IPCOMP) {
+			minspi = ntohl (0x100);
+			maxspi = ntohl (0xffff);
+		}
+		else {
+			minspi = 0;
+			maxspi = 0;
+		}
+#endif /* __linux__ */
 		mode = ipsecdoi2pfkey_mode(pr->encmode);
 		if (mode == ~0) {
 			plog(LLV_ERROR, LOCATION, NULL,
@@ -795,7 +810,12 @@
 				mode,
 				iph2->dst,		/* src of SA */
 				iph2->src,		/* dst of SA */
-				0, 0, pr->reqid_in, iph2->seq) < 0) {
+#ifdef __linux__
+				minspi, maxspi,
+#else
+				0, 0, 
+#endif /* __linux__ */
+				pr->reqid_in, iph2->seq) < 0) {
 			plog(LLV_ERROR, LOCATION, NULL,
 				"ipseclib failed send getspi (%s)\n",
 				ipsec_strerror());
@@ -919,6 +939,7 @@
 	int e_type, e_keylen, a_type, a_keylen, flags;
 	u_int satype, mode;
 	u_int64_t lifebyte = 0;
+	u_int wsize = 4;  /* XXX static size of window */ 
 
 	/* sanity check */
 	if (iph2->approval == NULL) {
@@ -943,6 +964,10 @@
 				"invalid proto_id %d\n", pr->proto_id);
 			return -1;
 		}
+		else if (satype == SADB_X_SATYPE_IPCOMP) {
+			/* IPCOMP has no replay window */
+			wsize = 0;
+		}
 #ifdef ENABLE_SAMODE_UNSPECIFIED
 		mode = IPSEC_MODE_ANY;
 #else
@@ -980,7 +1005,7 @@
 				iph2->src,
 				pr->spi,
 				pr->reqid_in,
-				4,	/* XXX static size of window */
+				wsize,	
 				pr->keymat->v,
 				e_type, e_keylen, a_type, a_keylen, flags,
 				0, lifebyte, iph2->approval->lifetime, 0,
@@ -1160,6 +1185,7 @@
 	int e_type, e_keylen, a_type, a_keylen, flags;
 	u_int satype, mode;
 	u_int64_t lifebyte = 0;
+	u_int wsize = 4; /* XXX static size of window */ 
 
 	/* sanity check */
 	if (iph2->approval == NULL) {
@@ -1184,6 +1210,10 @@
 				"invalid proto_id %d\n", pr->proto_id);
 			return -1;
 		}
+		else if (satype == SADB_X_SATYPE_IPCOMP) {
+			/* no replay window for IPCOMP */
+			wsize = 0;
+		}
 #ifdef ENABLE_SAMODE_UNSPECIFIED
 		mode = IPSEC_MODE_ANY;
 #else
@@ -1221,7 +1251,7 @@
 				iph2->dst,
 				pr->spi_p,
 				pr->reqid_out,
-				4,	/* XXX static size of window */
+				wsize,	
 				pr->keymat_p->v,
 				e_type, e_keylen, a_type, a_keylen, flags,
 				0, lifebyte, iph2->approval->lifetime, 0,
